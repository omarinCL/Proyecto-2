{"version":3,"sources":["views/Home.page.jsx","utils/validationUtils.js","hooks/useInput.js","containers/Login/Login.actions.js","containers/Login/Login.container.jsx","views/Login.page.jsx","components/Favorite.jsx","containers/Episodios/Episodios.actions.js","components/Spinner.jsx","containers/Episodios/Episodios.container.jsx","views/Episodios.page.jsx","containers/Personajes/Personajes.actions.js","containers/Personajes/Personajes.container.jsx","views/Personajes.page.jsx","containers/Usuarios/Usuarios.container.jsx","views/Usuarios.page.jsx","containers/Login/Login.reducer.js","containers/Routes/PrivateRoute.reducer.js","containers/Episodios/Episodios.reducer.js","containers/Personajes/Personajes.reducer.js","redux/reducers.js","redux/store.js","containers/Routes/PrivateRoute.container.jsx","containers/Header/Header.container.jsx","App.js","index.js"],"names":["HomePage","loggedIn","useSelector","state","privateRouteReducer","Row","Col","name","validate","field","errors","_validate","Object","keys","length","value","rules","required","email","test","minLength","password","useInput","format","defaultValue","useState","setValue","isValid","setIsValid","setErrors","handleOnChange","e","str","type","replace","cleanString","target","noValidateOnChange","onLoginError","payload","onLoginSuccess","LoginContainer","emailField","passwordField","dispatch","useDispatch","isLoggedIn","Boolean","loginError","to","className","Alert","variant","Form","Group","Label","Control","onChange","isInvalid","Feedback","values","Button","block","onClick","fields","forEach","element","validateAll","getState","loginReducer","users","filter","user","foundUser","error","LoginPage","Favorite","props","isFavorite","onRemoveFavorite","alt","onAddFavorite","getEpisodes","url","a","loadingEpisodes","Axios","get","response","loadEpisodesSuccess","data","loadEpisodesError","createAction","Spinner","show","EpisodiosContainer","episodes","episodiosReducer","favoriteEpisodes","nextUrl","info","next","loading","useEffect","handleOnAddFavorite","episodeId","id","userId","handleOnRemoveFavorite","Table","size","map","key","episode","air_date","some","disabled","EpisodiosPage","getCharacters","PersonajesContainer","characters","personajesReducer","favoriteCharacters","characterId","CardColumns","character","Card","Img","src","image","Body","Title","Text","gender","species","PersonajesPage","UsuariosContainer","relatedUsers","epId","indexOf","UsuariosPage","initialState","action","find","concat","results","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","trace","store","createStore","applyMiddleware","thunk","PrivateRoute","Component","component","restProps","render","componentProps","Header","Navbar","bg","expand","style","marginBottom","Brand","Toggle","aria-controls","Collapse","Nav","exact","activeClassName","App","basename","Container","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.322997dc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst HomePage = () => {\r\n  const { loggedIn } = useSelector(state => ({ loggedIn: state.privateRouteReducer.loggedIn }))\r\n\r\n  return <Row>{loggedIn ? <Col>Bienvenido!, {loggedIn.name}</Col> : <Col>Bienvenido, por favor, inicia sesión para comenzar.</Col>}</Row>\r\n}\r\n\r\nexport default HomePage\r\n","export const cleanString = (str, type) => {\r\n  switch (type) {\r\n    case 'alpha':\r\n      return str.replace(/([^a-z0-9ñ]+)/gi, '')\r\n    case 'rut':\r\n      return str.replace(/([^0-9k.-]+)/gi, '')\r\n    case 'text':\r\n      return str.replace(/([^a-z0-9 .,ñáéíóú'-]+)/gi, '')\r\n    case 'date':\r\n      return str.replace(/([^0-9-]+)/gi, '')\r\n    case 'number':\r\n      return str.replace(/([^0-9]+)/gi, '')\r\n    case 'mail':\r\n      return str.replace(/([^a-z0-9ñ.@-]+)/gi, '')\r\n    default:\r\n      return str\r\n  }\r\n}\r\n\r\nexport const validateMail = mail => {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  return re.test(String(mail).toLowerCase())\r\n}\r\n\r\nexport const validatePassword = password => {\r\n  const regexp = new RegExp(/^(?=.{8,}$)(?=.*?[a-z])(?=.*?[0-9]).*$/, 'i')\r\n  return regexp.test(password)\r\n}\r\n\r\nexport const validateAll = fields => {\r\n  return fields.every(field => Object.keys(field.errors).length === 0)\r\n}\r\n\r\nexport const validate = field => {\r\n  const errors = _validate(field)\r\n  const isValid = Object.keys(errors).length === 0\r\n  return [errors, isValid]\r\n}\r\n\r\nconst _validate = field => {\r\n  const errors = {}\r\n  if (!field.value && field.rules.required) {\r\n    errors.required = 'Este campo es obligatorio'\r\n  }\r\n\r\n  if (field.rules.email && !/\\S+@\\S+\\.\\S+/.test(field.value) && field.value) {\r\n    errors.email = 'Formato de correo electrónico inválido'\r\n  }\r\n\r\n  if (field.rules.minLength && field.value.length < field.rules.minLength) {\r\n    errors.password = `Este campo debe tener al menos ${field.rules.minLength} caracteres`\r\n  }\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport { validate, cleanString } from '../utils/validationUtils'\r\n\r\n/**\r\n * @typedef Rules\r\n * @property {Boolean} required\r\n * @property {number} minLength\r\n * @property {boolean} noValidateOnChange\r\n * @property {boolean} email\r\n */\r\n\r\n/**\r\n * Hook que permite manejar un campo de formulario con sus validaciones y eventos.\r\n * @param {string} name Nombre del campo\r\n * @param {Rules} rules Reglas de validacion que aplicarán en el campo\r\n * @param {string} format Formato que se aplicará en el campo al momento de escribir\r\n * @param {string} defaultValue Valor por defecto que tendrá el campo\r\n */\r\nconst useInput = (name, rules, format, defaultValue) => {\r\n  const [value, setValue] = useState(defaultValue)\r\n  const [isValid, setIsValid] = useState(null)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const handleOnChange = e => {\r\n    const value = cleanString(e.target.value, format)\r\n    const [errors, isValid] = validate({ name, value, rules })\r\n    setValue(value)\r\n    if (!rules.noValidateOnChange) {\r\n      setIsValid(isValid)\r\n      setErrors(errors)\r\n    }\r\n  }\r\n\r\n  return {\r\n    [name + 'Field']: {\r\n      name,\r\n      value,\r\n      rules,\r\n      errors,\r\n      handleOnChange,\r\n      isValid,\r\n      validate: () => {\r\n        const [errors, isValid] = validate({ name, value, rules })\r\n        setErrors(errors)\r\n        setIsValid(isValid)\r\n        return isValid\r\n      },\r\n      setValue: value => setValue(value)\r\n    }\r\n  }\r\n}\r\n\r\nexport const validateAll = fields => {\r\n  let isValid = true\r\n  fields.forEach(element => {\r\n    if (!element.validate()) isValid = false\r\n  })\r\n  return isValid\r\n}\r\n\r\nexport const getErrors = errors => {\r\n  return (\r\n    <ul className='m-0 list-unstyled'>\r\n      {Object.values(errors).map((error, key) => (\r\n        <li key={key}>{error}</li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default useInput\r\n","export const LOGIN_ERROR = 'LOGIN_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\n\r\nexport const onLogin = payload => (dispatch, getState) => {\r\n  const state = getState()\r\n  const [foundUser] = state.loginReducer.users.filter(user => user.email === payload.email && user.password === payload.password)\r\n\r\n  if (foundUser) {\r\n    dispatch(onLoginSuccess({ user: foundUser }))\r\n  } else {\r\n    dispatch(onLoginError({ error: '401' }))\r\n  }\r\n}\r\n\r\nexport const onLoginError = payload => ({\r\n  payload,\r\n  type: LOGIN_ERROR\r\n})\r\n\r\nexport const onLoginSuccess = payload => ({\r\n  payload,\r\n  type: LOGIN_SUCCESS\r\n})\r\n","import React from 'react'\r\nimport useInput, { validateAll } from './../../hooks/useInput'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { onLogin } from './Login.actions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './Login.style.scss'\r\n\r\nconst LoginContainer = () => {\r\n  const { emailField } = useInput('email', { required: true, email: true }, 'mail', '')\r\n  const { passwordField } = useInput('password', { required: true }, '', '')\r\n  const dispatch = useDispatch()\r\n  const { isLoggedIn, loginError } = useSelector(state => ({\r\n    isLoggedIn: Boolean(state.privateRouteReducer.loggedIn),\r\n    loginError: state.privateRouteReducer.loginError\r\n  }))\r\n\r\n  const handleSubmitLogin = () => {\r\n    if (validateAll([emailField, passwordField])) {\r\n      dispatch(onLogin({ email: emailField.value, password: passwordField.value }))\r\n    }\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='login-clean'>\r\n        <div className='illustration'>\r\n          <i className='fas fa-key' />\r\n        </div>\r\n        {loginError && (\r\n          <div className='error-message'>\r\n            <Alert variant='danger'>El usuario o contraseña no coinciden.</Alert>\r\n          </div>\r\n        )}\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              name='email'\r\n              onChange={emailField.handleOnChange}\r\n              value={emailField.value}\r\n              isInvalid={emailField.isValid !== null ? !emailField.isValid : null}\r\n            />\r\n            <Form.Control.Feedback type='invalid'>{Object.values(emailField.errors)}</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Contraseña</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              name='password'\r\n              onChange={passwordField.handleOnChange}\r\n              value={passwordField.value}\r\n              isInvalid={passwordField.isValid !== null ? !passwordField.isValid : null}\r\n            />\r\n            <Form.Control.Feedback type='invalid'>{Object.values(passwordField.errors)}</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Button variant='primary' block onClick={handleSubmitLogin}>\r\n              Iniciar sesión\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginContainer\r\n","import React from 'react'\r\nimport LoginContainer from './../containers/Login/Login.container'\r\n\r\nconst LoginPage = () => {\r\n  return <LoginContainer />\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport './Favorite.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Favorite = props => {\r\n  return (\r\n    <>\r\n      {props.isFavorite && (\r\n        <span onClick={props.onRemoveFavorite} alt='Quitar de mis favoritos'>\r\n          <i className='fas fa-star favorite' />\r\n        </span>\r\n      )}\r\n      {!props.isFavorite && (\r\n        <span onClick={props.onAddFavorite} alt='Agregar a favoritos'>\r\n          <i className='far fa-star unfavorite' />\r\n        </span>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nFavorite.propTypes = {\r\n  onAddFavorite: PropTypes.func.isRequired,\r\n  onRemoveFavorite: PropTypes.func.isRequired,\r\n  isFavorite: PropTypes.bool\r\n}\r\n\r\nexport default Favorite\r\n","import Axios from 'axios'\r\n\r\nexport const LOAD_EPISODES_SUCCESS = 'LOAD_EPISODES_SUCCESS'\r\nexport const LOAD_EPISODES_ERROR = 'LOAD_EPISODES_ERROR'\r\nexport const LOADING_EPISODES = 'LOADING_EPISODES'\r\nexport const ADD_FAVORITE_EPISODE = 'ADD_FAVORITE_EPISODE'\r\nexport const REMOVE_FAVORITE_EPISODE = 'REMOVE_FAVORITE_EPISODE'\r\n\r\nexport const getEpisodes = url => async dispatch => {\r\n  dispatch(loadingEpisodes())\r\n  try {\r\n    const response = await Axios.get(!url ? 'https://rickandmortyapi.com/api/episode' : url)\r\n    dispatch(loadEpisodesSuccess(response.data))\r\n  } catch (error) {\r\n    dispatch(loadEpisodesError())\r\n  }\r\n}\r\n\r\nexport const addFavoriteEpisode = id => (dispatch, getState) => {\r\n  const state = getState()\r\n  const user = state.privateRouteReducer.loggedIn\r\n  dispatch(createAction(ADD_FAVORITE_EPISODE, { userId: user.id, episodeId: id }))\r\n}\r\n\r\nexport const removeFavoriteEpisode = id => (dispatch, getState) => {\r\n  const state = getState()\r\n  const user = state.privateRouteReducer.loggedIn\r\n  dispatch(createAction(REMOVE_FAVORITE_EPISODE, { userId: user.id, episodeId: id }))\r\n}\r\n\r\nconst createAction = (type, payload) => {\r\n  if (payload) {\r\n    return {\r\n      type,\r\n      payload\r\n    }\r\n  } else return { type }\r\n}\r\n\r\nconst loadingEpisodes = () => ({\r\n  type: LOADING_EPISODES\r\n})\r\n\r\nconst loadEpisodesSuccess = payload => ({\r\n  payload,\r\n  type: LOAD_EPISODES_SUCCESS\r\n})\r\n\r\nconst loadEpisodesError = () => ({\r\n  type: LOAD_EPISODES_ERROR\r\n})\r\n","import React from 'react'\r\nimport './Spinner.scss'\r\n\r\nconst Spinner = props => {\r\n  if (props.show) {\r\n    return (\r\n      <div className='row justify-content-center'>\r\n        <div className='col-auto'>\r\n          <div className='lds-ring'>\r\n            <div />\r\n            <div />\r\n            <div />\r\n            <div />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else return null\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useEffect } from 'react'\r\nimport { Table, Row, Col, Button } from 'react-bootstrap'\r\nimport Favorite from '../../components/Favorite'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getEpisodes, addFavoriteEpisode, removeFavoriteEpisode } from './Episodios.actions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst EpisodiosContainer = () => {\r\n  const { episodes, favoriteEpisodes, nextUrl, loading } = useSelector(state => ({\r\n    episodes: state.episodiosReducer.episodes,\r\n    favoriteEpisodes: state.privateRouteReducer.loggedIn.favoriteEpisodes,\r\n    nextUrl: state.episodiosReducer.response ? state.episodiosReducer.response.info.next : null,\r\n    loading: state.episodiosReducer.loading\r\n  }))\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (episodes.length === 0) dispatch(getEpisodes())\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const handleOnAddFavorite = episodeId => e => {\r\n    dispatch(addFavoriteEpisode(episodeId))\r\n  }\r\n\r\n  const handleOnRemoveFavorite = episodeId => e => {\r\n    dispatch(removeFavoriteEpisode(episodeId))\r\n  }\r\n\r\n  const handleVerMas = () => {\r\n    dispatch(getEpisodes(nextUrl))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h2>Episodios</h2>\r\n          <hr />\r\n          <Spinner show={loading} />\r\n          <Table size='sm'>\r\n            <tbody>\r\n              {episodes.map(e => (\r\n                <tr key={e.id + '-episodio'}>\r\n                  <td>\r\n                    {e.episode} - {e.name} - <em>Fecha de emisión: {e.air_date}</em>\r\n                  </td>\r\n                  <td>\r\n                    <Favorite\r\n                      isFavorite={favoriteEpisodes.some(id => id === e.id)}\r\n                      onAddFavorite={handleOnAddFavorite(e.id)}\r\n                      onRemoveFavorite={handleOnRemoveFavorite(e.id)}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n      {nextUrl && (\r\n        <Row className='text-right'>\r\n          <Col>\r\n            <Button variant='outline-primary' onClick={handleVerMas} disabled={loading}>\r\n              {loading ? 'Cargando episodios..' : 'Ver más'}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <br />\r\n      <br />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EpisodiosContainer\r\n","import React from 'react'\r\nimport EpisodiosContainer from '../containers/Episodios/Episodios.container'\r\n\r\nconst EpisodiosPage = () => {\r\n  return <EpisodiosContainer />\r\n}\r\n\r\nexport default EpisodiosPage\r\n","import Axios from 'axios'\r\n\r\nexport const LOAD_CHARACTERS_SUCCESS = 'LOAD_CHARACTERS_SUCCESS'\r\nexport const LOAD_CHARACTERS_ERROR = 'LOAD_CHARACTERS_ERROR'\r\nexport const LOADING_CHARACTERS = 'LOADING_CHARACTERS'\r\nexport const ADD_FAVORITE_CHARACTER = 'ADD_FAVORITE_CHARACTER'\r\nexport const REMOVE_FAVORITE_CHARACTER = 'REMOVE_FAVORITE_CHARACTER'\r\n\r\nexport const getCharacters = url => async dispatch => {\r\n  dispatch(createAction(LOADING_CHARACTERS))\r\n  try {\r\n    const response = await Axios.get(!url ? 'https://rickandmortyapi.com/api/character' : url)\r\n    dispatch(createAction(LOAD_CHARACTERS_SUCCESS, response.data))\r\n  } catch (error) {\r\n    dispatch(createAction(LOAD_CHARACTERS_ERROR))\r\n  }\r\n}\r\n\r\nexport const addFavoriteCharacter = id => (dispatch, getState) => {\r\n  const state = getState()\r\n  const user = state.privateRouteReducer.loggedIn\r\n  dispatch(createAction(ADD_FAVORITE_CHARACTER, { userId: user.id, characterId: id }))\r\n}\r\n\r\nexport const removeFavoriteCharacter = id => (dispatch, getState) => {\r\n  const state = getState()\r\n  const user = state.privateRouteReducer.loggedIn\r\n  dispatch(createAction(REMOVE_FAVORITE_CHARACTER, { userId: user.id, characterId: id }))\r\n}\r\n\r\nconst createAction = (type, payload) => {\r\n  if (payload) {\r\n    return {\r\n      type,\r\n      payload\r\n    }\r\n  } else return { type }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { CardColumns, Card, Row, Col, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCharacters, addFavoriteCharacter, removeFavoriteCharacter } from './Personajes.actions'\r\nimport Favorite from './../../components/Favorite'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst PersonajesContainer = () => {\r\n  const { characters, favoriteCharacters, nextUrl, loading } = useSelector(state => ({\r\n    characters: state.personajesReducer.characters,\r\n    favoriteCharacters: state.privateRouteReducer.loggedIn.favoriteCharacters,\r\n    nextUrl: state.personajesReducer.response ? state.personajesReducer.response.info.next : null,\r\n    loading: state.personajesReducer.loading\r\n  }))\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (characters.length === 0) dispatch(getCharacters())\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const handleOnAddFavorite = characterId => e => {\r\n    dispatch(addFavoriteCharacter(characterId))\r\n  }\r\n\r\n  const handleOnRemoveFavorite = characterId => e => {\r\n    dispatch(removeFavoriteCharacter(characterId))\r\n  }\r\n\r\n  const handleVerMas = () => {\r\n    dispatch(getCharacters(nextUrl))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Personajes</h2>\r\n      <hr />\r\n      <Spinner show={loading} />\r\n      <CardColumns>\r\n        {characters.map(character => (\r\n          <Card key={character.id + '-character'}>\r\n            <Card.Img variant='top' src={character.image} />\r\n            <Card.Body>\r\n              <Card.Title>{character.name}</Card.Title>\r\n              <Card.Text>\r\n                Gender: {character.gender}\r\n                <br />\r\n                Specie: {character.species}\r\n                <br />\r\n                Id: {character.id}\r\n                <br />\r\n                <Favorite\r\n                  isFavorite={favoriteCharacters.some(id => id === character.id)}\r\n                  onAddFavorite={handleOnAddFavorite(character.id)}\r\n                  onRemoveFavorite={handleOnRemoveFavorite(character.id)}\r\n                />\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        ))}\r\n      </CardColumns>\r\n      {nextUrl && (\r\n        <Row className='text-right'>\r\n          <Col>\r\n            <Button variant='outline-primary' onClick={handleVerMas} disabled={loading}>\r\n              {loading ? 'Cargando personajes..' : 'Ver más'}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <br />\r\n      <br />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonajesContainer\r\n","import React from 'react'\r\nimport PersonajesContainer from './../containers/Personajes/Personajes.container'\r\n\r\nconst PersonajesPage = () => {\r\n  return <PersonajesContainer />\r\n}\r\n\r\nexport default PersonajesPage\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UsuariosContainer = () => {\r\n  const { users, loggedIn } = useSelector(state => ({ users: state.loginReducer.users, loggedIn: state.privateRouteReducer.loggedIn }))\r\n  const relatedUsers = users.filter(user => user.id !== loggedIn.id && user.favoriteEpisodes.some(epId => loggedIn.favoriteEpisodes.indexOf(epId) !== -1))\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h2>Usuarios con gustos similares</h2>\r\n          <hr />\r\n          <Table size='sm'>\r\n            <tbody>\r\n              {relatedUsers.map(e => (\r\n                <tr key={e.id + '-episodio'}>\r\n                  <td>{e.name}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <br />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UsuariosContainer\r\n","import React from 'react'\r\nimport UsuariosContainer from '../containers/Usuarios/Usuarios.container'\r\n\r\nconst UsuariosPage = () => {\r\n  return <UsuariosContainer />\r\n}\r\n\r\nexport default UsuariosPage\r\n","import { ADD_FAVORITE_EPISODE, REMOVE_FAVORITE_EPISODE } from '../Episodios/Episodios.actions'\r\nimport { ADD_FAVORITE_CHARACTER, REMOVE_FAVORITE_CHARACTER } from '../Personajes/Personajes.actions'\r\n\r\nconst initialState = {\r\n  users: [\r\n    {\r\n      id: 1,\r\n      name: 'Orlando',\r\n      email: 'orlando@chilecompra.cl',\r\n      password: 'orlando123',\r\n      favoriteEpisodes: [2, 7],\r\n      favoriteCharacters: [3, 5]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Oscar',\r\n      email: 'oscar@chilecompra.cl',\r\n      password: 'oscar123',\r\n      favoriteEpisodes: [3, 5],\r\n      favoriteCharacters: [1, 2]\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Pedro',\r\n      email: 'pedro@chilecompra.cl',\r\n      password: 'pedro123',\r\n      favoriteEpisodes: [1, 6],\r\n      favoriteCharacters: [4, 9]\r\n    }\r\n  ]\r\n}\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_FAVORITE_EPISODE: {\r\n      const user = state.users.find(user => user.id === action.payload.userId)\r\n      user.favoriteEpisodes = user.favoriteEpisodes.concat([action.payload.episodeId])\r\n      // console.log(user)\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload.userId).concat(user)\r\n      }\r\n    }\r\n    case REMOVE_FAVORITE_EPISODE: {\r\n      const user = state.users.find(user => user.id === action.payload.userId)\r\n      user.favoriteEpisodes = user.favoriteEpisodes.filter(epId => epId !== action.payload.episodeId)\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload.userId).concat(user)\r\n      }\r\n    }\r\n    case ADD_FAVORITE_CHARACTER: {\r\n      const user = state.users.find(user => user.id === action.payload.userId)\r\n      user.favoriteCharacters = user.favoriteCharacters.concat([action.payload.characterId])\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload.userId).concat(user)\r\n      }\r\n    }\r\n    case REMOVE_FAVORITE_CHARACTER: {\r\n      const user = state.users.find(user => user.id === action.payload.userId)\r\n      user.favoriteCharacters = user.favoriteCharacters.filter(epId => epId !== action.payload.characterId)\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user.id !== action.payload.userId).concat(user)\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default loginReducer\r\n","import { LOGIN_SUCCESS, LOGIN_ERROR } from '../Login/Login.actions'\r\n\r\nconst initialState = {\r\n  loggedIn: null,\r\n  loginError: false\r\n}\r\n\r\nconst privateRouteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS: {\r\n      return { ...state, loggedIn: action.payload.user, loginError: false }\r\n    }\r\n    case LOGIN_ERROR:\r\n      return { ...state, loggedIn: null, loginError: true }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default privateRouteReducer\r\n","import { LOADING_EPISODES, LOAD_EPISODES_SUCCESS, LOAD_EPISODES_ERROR } from './Episodios.actions'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  response: null,\r\n  error: false,\r\n  episodes: []\r\n}\r\n\r\nconst episodiosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_EPISODES:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    case LOAD_EPISODES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        response: action.payload,\r\n        episodes: state.episodes.concat(action.payload.results),\r\n        loading: false,\r\n        error: false\r\n      }\r\n    case LOAD_EPISODES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default episodiosReducer\r\n","import { LOADING_CHARACTERS, LOAD_CHARACTERS_SUCCESS, LOAD_CHARACTERS_ERROR } from './Personajes.actions'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  response: null,\r\n  error: false,\r\n  characters: []\r\n}\r\n\r\nconst personajesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    case LOAD_CHARACTERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        response: action.payload,\r\n        characters: state.characters.concat(action.payload.results),\r\n        loading: false,\r\n        error: false\r\n      }\r\n    case LOAD_CHARACTERS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default personajesReducer\r\n","import { combineReducers } from 'redux'\r\nimport loginReducer from './../containers/Login/Login.reducer'\r\nimport privateRouteReducer from './../containers/Routes/PrivateRoute.reducer'\r\nimport episodiosReducer from './../containers/Episodios/Episodios.reducer'\r\nimport personajesReducer from './../containers/Personajes/Personajes.reducer'\r\n\r\nconst rootReducer = combineReducers({ loginReducer, privateRouteReducer, episodiosReducer, personajesReducer })\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\r\n\r\nconst composeEnhancers = composeWithDevTools({ trace: true })\r\n\r\nconst store = createStore(rootReducer, {}, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = props => {\r\n  const { isLoggedIn } = useSelector(state => ({ isLoggedIn: Boolean(state.privateRouteReducer.loggedIn) }))\r\n  const { component: Component, ...restProps } = props\r\n\r\n  return (\r\n    <Route\r\n      {...restProps}\r\n      render={componentProps => {\r\n        if (!isLoggedIn) {\r\n          return <Redirect to='/login' />\r\n        }\r\n\r\n        return <Component {...componentProps} />\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Header = () => {\r\n  const { isLoggedIn } = useSelector(state => ({ isLoggedIn: Boolean(state.privateRouteReducer.loggedIn) }))\r\n\r\n  return (\r\n    <Navbar bg='dark' variant='dark' expand='md' style={{ marginBottom: '20px' }}>\r\n      <Navbar.Brand>Rick and Morty</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <Navbar.Collapse id='basic-navbar-nav'>\r\n        <Nav className='ml-auto'>\r\n          <NavLink exact to='/' activeClassName='active' className='nav-link'>\r\n            Home\r\n          </NavLink>\r\n          {isLoggedIn && (\r\n            <>\r\n              <NavLink exact to='/episodios' activeClassName='active' className='nav-link'>\r\n                Episodios\r\n              </NavLink>\r\n              <NavLink exact to='/personajes' activeClassName='active' className='nav-link'>\r\n                Personajes\r\n              </NavLink>\r\n              <NavLink exact to='/usuarios' activeClassName='active' className='nav-link'>\r\n                Usuarios\r\n              </NavLink>\r\n            </>\r\n          )}\r\n          {!isLoggedIn && (\r\n            <NavLink exact to='/login' activeClassName='active' className='nav-link'>\r\n              Iniciar Sesión\r\n            </NavLink>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport HomePage from './views/Home.page'\nimport LoginPage from './views/Login.page'\nimport EpisodiosPage from './views/Episodios.page'\nimport PersonajesPage from './views/Personajes.page'\nimport UsuariosPage from './views/Usuarios.page'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport PrivateRoute from './containers/Routes/PrivateRoute.container'\nimport Header from './containers/Header/Header.container'\nimport { Container } from 'react-bootstrap'\n\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <Router basename='/Proyecto-2'>\n          <Header />\n          <Container>\n            <Switch>\n              <Route exact path='/' component={HomePage} />\n              <Route exact path='/login' component={LoginPage} />\n              <PrivateRoute exact path='/episodios' component={EpisodiosPage} />\n              <PrivateRoute exact path='/personajes' component={PersonajesPage} />\n              <PrivateRoute exact path='/usuarios' component={UsuariosPage} />\n              <Route exact path='/error/403' render={() => <div>Error 403</div>} />\n              <Route path='*' render={() => <div>Error 404</div>} />\n            </Switch>\n          </Container>\n        </Router>\n      </Provider>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport '@fortawesome/fontawesome-free/js/all'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}